name: Auto Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Release Drafter
        run: npm install --global release-drafter

      - name: Auto Tagging and Release
        id: release
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          git_tag="${latest_tag:-v0.0.0}"
          new_version=$(npx release-drafter latest-release)
          if [ "$new_version" != "$git_tag" ]; then
            echo "Creating a new tag: $new_version"
            git tag "$new_version"
            git push --tags
          else
            echo "No new version to release."
          fi
          release_url=$(npx release-drafter)
          echo "Release URL: $release_url"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the Release
        if: steps.release.outputs.release_url != 'null'
        run: |
          release_url=${{ steps.release.outputs.release_url }}
          release_id=$(echo $release_url | sed 's/[^0-9]*//g')
          echo "Publishing the release..."
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$release_id" \
            -d '{
              "draft": false
            }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
